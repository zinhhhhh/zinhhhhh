import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        //bai01();
        bai02();
    }
    public static void bai01(){
        Scanner scanner = new Scanner(System.in);
        while (true) {
            System.out.println("Menu:");
            System.out.println("1. Thêm mới nhân viên");
            System.out.println("2. Danh sách nhân viên");
            System.out.println("3. Danh sách nhân viên theo tuổi tăng dần");
            System.out.println("4. Danh sách nhân viên theo tên A->Z");
            System.out.println("0. Thoát chương trình");
            System.out.print("Mời bạn chọn chức năng: ");
            try {
                int choice = scanner.nextInt();
                scanner.nextLine();
                switch (choice) {
                    case 1:
                        addStaff();
                        break;
                    case 2:
                        displayAllStaff();
                        break;
                    case 3:
                        displayAllStaffByAge();
                        break;
                    case 4:
                        displayAllStaffByName();
                        break;
                    case 0:
                        System.out.println("Chương trình kết thúc.");
                        System.exit(0);
                    default:
                        System.out.println("Chức năng không hợp lệ. Mời bạn chọn lại.");
                }
            }catch (InputMismatchException e){
                System.out.println("chức năng không hợp lệ . Mời bạn chọn lại.");
                scanner.nextLine();
            }
        }
    }

    public static void addStaff() {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Nhập thông tin nhân viên mới:");
        System.out.print("Tên: ");
        String name = scanner.nextLine();
        int age = 0 ;
        while (age<=0){
            try{
                System.out.print("tuổi : ");
                age = scanner.nextInt();
                scanner.nextLine();
                if(age<0){
                    System.out.printf("tuổi phải là một số nguyên dương.");
                }
            }catch (InputMismatchException e){
                System.out.println("tuổi phải là một số nguyên dương.");
                scanner.nextLine();
            }
        }
        String phoneNumber = "";
        boolean vPhoneNumber= false;
        while (!vPhoneNumber){
            try{
                System.out.print("số điện thoại: ");
                phoneNumber = scanner.nextLine();
                Long.parseLong(phoneNumber);
                if(phoneNumber.length()!=10){
                    System.out.println("số điện thoại có độ dài là 10 .");
                }else {
                    vPhoneNumber = true;
                }
            }catch (NumberFormatException e ){
                System.out.println("số điện thoại phải là một số nguyên .");
            }
        }
        System.out.print("Chức vụ: ");
        String position = scanner.nextLine();

        try (BufferedWriter writer = new BufferedWriter(new FileWriter("my_staff.txt", true))) {
            writer.write(name + "|" + age + "|" + phoneNumber + "|" + position);
            writer.newLine();
            System.out.println("Thêm nhân viên thành công.");
        } catch (IOException e) {
            System.err.println("Lỗi khi ghi file.");
        }
    }

    public static void displayAllStaff() {
        System.out.println("Danh sách nhân viên:");
        try (BufferedReader reader = new BufferedReader(new FileReader("my_staff.txt"))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] tokens = line.split("\\|");
                String name = tokens[0];
                int age = Integer.parseInt(tokens[1]);
                String phoneNumber = tokens[2];
                String position = tokens[3];
                Staff staff = new Staff(name, age, phoneNumber, position);
                System.out.println(staff.getName() + " - " + staff.getAge() + " - " + staff.getPhoneNumber() + " - " + staff.getPosition());
                break;
            }
        } catch (IOException e) {
            System.err.println("Lỗi khi đọc file.");
        }
    }

    public static void displayAllStaffByAge() {
        System.out.println("Danh sách nhân viên theo tuổi tăng dần:");
        ArrayList<Staff> staffs = new ArrayList<>();
        try (BufferedReader reader = new BufferedReader(new FileReader("my_staff.txt"))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] tokens = line.split("\\|");
                String name = tokens[0];
                int age = Integer.parseInt(tokens[1]);
                String phoneNumber = tokens[2];
                String position = tokens[3];
                Staff staff = new Staff(name, age, phoneNumber, position);
                staffs.add(staff);
                break;
            }
        } catch (IOException e) {
            System.err.println("Lỗi khi đọc file.");
        }
        Collections.sort(staffs, new Comparator<Staff>() {
            @Override
            public int compare(Staff o1, Staff o2) {
                return o1.getAge() - o2.getAge();
            }
        });
        for (Staff staff : staffs) {
            System.out.println(staff.getName() + " - " + staff.getAge() + " - " + staff.getPhoneNumber() + " - " + staff.getPosition());
        }
    }

    public static void displayAllStaffByName() {
        System.out.println("Danh sách nhân viên theo tên A->Z:");
        ArrayList<Staff> staffs = new ArrayList<>();
        try (BufferedReader reader = new BufferedReader(new FileReader("my_staff.txt"))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] tokens = line.split("\\|");
                String name = tokens[0];
                int age = Integer.parseInt(tokens[1]);
                String phoneNumber = tokens[2];
                String position = tokens[3];
                Staff staff = new Staff(name, age, phoneNumber, position);
                staffs.add(staff);
                break;
            }
        } catch (IOException e) {
            System.err.println("Lỗi khi đọc file.");
        }
        Collections.sort(staffs, new Comparator<Staff>() {
            @Override
            public int compare(Staff o1, Staff o2) {
                return o1.getName().compareTo(o2.getName());
            }
        });
        for (Staff staff : staffs) {
            System.out.println(staff.getName() + " - " + staff.getAge() + " - " + staff.getPhoneNumber() + " - " + staff.getPosition());
        }
    }




    public static void bai02() {
                Scanner scanner = new Scanner(System.in);

                ArrayList<Student> students = new ArrayList<>();

                for (int i = 0; i < 5; i++) {
                    System.out.println("sinh viên  " + (i+1) + ": ");

                    System.out.print("tên : ");
                    String name = scanner.nextLine();

                    System.out.print("lớp : ");
                    String className = scanner.nextLine();

                    System.out.print("điểm : ");
                    float score = scanner.nextFloat();
                    scanner.nextLine();

                    Student student = new Student(name, className, score);
                    students.add(student);
                }

                try {
                    FileWriter writer = new FileWriter("student.txt");
                    for (Student s : students) {
                        writer.write(s.name + "," + s.className + "," + s.score + "\n");
                    }
                    writer.close();
                    System.out.println("đã lưu thành công.");
                } catch (IOException e) {
                    System.out.println("đã xảy ra lỗi .");
                    e.printStackTrace();
                }
            }
        }

